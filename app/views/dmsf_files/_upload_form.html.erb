<% hide = false %>

<span id="attachments_fields">
<% if defined?(container) && container && container.saved_attachments %>
  <% container.saved_attachments.each_with_index do |attachment, i| %>
    <span id="attachments_p<%= i %>">
      <%= text_field_tag("attachments[p#{i}][filename]", attachment.filename, :class => 'filename') %>
      <%= hidden_field_tag "attachments[p#{i}][token]", "#{attachment.token}" %>
      <% hide = true %>
    </span>
  <% end %>
<% end %>
</span>

<% unless hide %>
  <span class="add_attachment">
  <%= file_field_tag 'attachments[dummy][file]',
        :id => nil,
        :class => 'file_selector',
        :multiple => false,
        :onchange => 'addInputFile(this);',
        :data => {
          :max_file_size => Setting.attachment_max_size.to_i.kilobytes,
          :max_file_size_message => l(:error_attachment_too_big, :max_size => number_to_human_size(Setting.attachment_max_size.to_i.kilobytes)),
          :max_file_count_message => l(:error_maximum_upload_filecount, :filecount => 1),
          :max_concurrent_uploads => Redmine::Configuration['max_concurrent_ajax_uploads'].to_i,
          :upload_path => uploads_path(:format => 'js'),
          :description_placeholder => l(:label_optional_description)
        } %>
  (<%= l(:label_max_size) %>: <%= number_to_human_size(Setting.attachment_max_size.to_i.kilobytes) %>)
  </span>
<% end %>

<% content_for :header_tags do %>
  <%= javascript_include_tag 'attachments_dmsf', :plugin => 'redmine_dmsf' %>
<% end %>
